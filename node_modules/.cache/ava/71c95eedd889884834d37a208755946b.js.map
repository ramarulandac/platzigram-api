{"version":3,"sources":["pictures-test.js"],"names":["t","id","v4","srv","req","res","url","body","uri","json","deepEqual","todo"],"mappings":"AAAA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;2cADkC;;;AACK;;AAErC;AACF,mBAAK,UAAL;AAAA,+BAAiB,WAAMA,CAAN,EAAW;AAC1B,QAAIC,KAAK,mBAAKC,EAAL,EAAT;;AAEA,QAAIC,MAAM;AAAA,oCAAM,WAAOC,GAAP,EAAYC,GAAZ,EAAoB;AAClC,yBAAKA,GAAL,EAAU,GAAV,EAAe,EAAEJ,EAAF,EAAf;AACD,OAFS;;AAAA;AAAA;AAAA;AAAA,SAAV;;AAIA;AACA,QAAIK,MAAM,MAAM,0BAAOH,GAAP,CAAhB;AACA;AACA,QAAII,OAAO,MAAM,8BAAQ,EAACC,KAAKF,GAAN,EAAWG,MAAM,IAAjB,EAAR,CAAjB;AACAT,MAAEU,SAAF,CAAYH,IAAZ,EAAkB,EAACN,EAAD,EAAlB;AACD,GAZD;;AAAA;AAAA;AAAA;AAAA;;AAcA,cAAKU,IAAL,CAAU,QAAV;AACA,cAAKA,IAAL,CAAU,gBAAV","file":"pictures-test.js","sourcesContent":["'use strict'\r\n\r\nimport test from 'ava'\r\nimport micro, { send } from 'micro'\r\nimport uuid from 'uuid-base62'\r\nimport listen from 'test-listen'  //  Testing microservices with micro\r\nimport request from 'request-promise'  //  http request using promises\r\n\r\n  //  testing micro: 'GET /_id' --> ruta para obtener imagen por id\r\ntest('GET /:id', async t => {\r\n  let id = uuid.v4()\r\n\r\n  let srv = micro(async (req, res) => {\r\n    send(res, 200, { id })\r\n  })\r\n\r\n  //  listen return url:port from server executed by micro-> line 13\r\n  let url = await listen(srv)\r\n  //  execute http request\r\n  let body = await request({uri: url, json: true})\r\n  t.deepEqual(body, {id})\r\n})\r\n\r\ntest.todo('POST /')\r\ntest.todo('POST /:id/like')\r\n"]}